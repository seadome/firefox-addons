# These settings are synced to GitHub by https://probot.github.io/apps/settings/
---
repository:
  # Available settings: <https://docs.github.com/en/rest/reference/repos#update-a-repository>

  # The name of the repository.  Changing this will rename the repository!
  name: firefox-addons
  description: Generated Nix expressions for packaging Firefox addons
  # A URL with more information about the repository
  # homepage: https://example.github.io/
  is_template: true
  topics: nix,firefox-addons
  private: false
  has_issues: true
  # Either `true` to enable projects for this repository, or `false` to disable
  # them.  If projects are disabled for the organization, passing `true` will
  # cause an API error.
  has_projects: false
  has_wiki: false
  has_downloads: false
  default_branch: main
  allow_squash_merge: false
  allow_merge_commit: true
  allow_rebase_merge: true
  allow_auto_merge: true
  delete_branch_on_merge: true
  enable_automated_security_fixes: true
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
  # - name: bug
  #   color: CC0000
  #   description: An issue with the system üêõ.

  # - name: feature
  #   # If including a `#`, make sure to wrap it with quotes!
  #   color: "#336699"
  #   description: New functionality.

  # - name: Help Wanted
  #   # Provide a new name to rename an existing label
  #   new_name: first-timers-only

# Milestones: define milestones for Issues and Pull Requests
milestones:
  # - title: milestone-title
  #   description: milestone-description
  #   # The state of the milestone.  Either `open` or `closed`
  #   state: open

# Collaborators: give specific users access to this repository.
# Available settings: <https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator>
collaborators:
  # - username: bkeepers
  #   permission: push
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator.  Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# Available settings: https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions
teams:
  # - name: core
  #   # The permission to grant the team.  Can be one of:
  #   # * `pull` - can pull, but not push to or administer this repository.
  #   # * `push` - can pull and push, but not administer this repository.
  #   # * `admin` - can pull, push and administer this repository.
  #   # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  #   # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
  #   permission: admin
  # - name: docs
  #   permission: push

branches:
  - name: main
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings.  Set to null to disable
    protection:
      # Required.  Require at least one approving review on a pull request,
      # before merging.  Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required.  (1-6)
        # required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        # dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        # require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews.  Pass
        # an empty dismissal_restrictions object to disable.  User and team
        # dismissal_restrictions are only available for organization-owned
        # repositories.  Omit this parameter for personal repositories.
        # dismissal_restrictions:
        #   users: []
        #   teams: []
      # Required.  Require status checks to pass before merging.  Set to null to
      # disable
      required_status_checks:
        # Required.  Require branches to be up to date before merging.
        strict: false
        # Required.  The list of status checks to require in order to merge into
        # this branch.
        contexts: []
      # Required.  Enforce all configured restrictions for administrators.  Set to
      # true to enforce required status checks for repository
      # administrators.  Set to null to disable.
      enforce_admins: false
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: false
      # Required.  Restrict who can push to this branch.  Team and user
      # restrictions are only available for organization-owned repositories.  Set
      # to null to disable.
      restrictions:
        apps: []
        users: ["montchr"]
        teams: []
